###logger4j 日志级别
###OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL 从高到底
##log4j.rootLogger = [ level ] , appenderName1, appenderName2
log4j.rootLogger=INFO,console
log4j.logger.ysl_test=INFO,logFile
log4j.logger.ysl_log_module=DEBUG,logModuleFile
log4j.logger.ysl_session_module=DEBUG,sessionModuleFile

##控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Threshold=INFO
log4j.appender.console.ImmediateFlush=true
log4j.appender.console.Target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n

##日志文件
log4j.appender.logFile=org.apache.log4j.RollingFileAppender
#100M
log4j.appender.logFile.maxFileSize=104857600
log4j.appender.logFile.Threshold=DEBUG
##表示所有消息都会被立即输出，设为false则不输出，默认值是true。
log4j.appender.logFile.ImmediateFlush=true
log4j.appender.logFile.Append=true
log4j.appender.logFile.File=${app.root}/WEB-INF/logs/ysl.log
log4j.appender.logFile.encoding=utf-8
#log4j.appender.logFile.DatePattern='.'yyyyMMdd
log4j.appender.logFile.layout=org.apache.log4j.PatternLayout
log4j.appender.logFile.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n

##日志文件
log4j.appender.logModuleFile=org.apache.log4j.RollingFileAppender
#100M
log4j.appender.logModuleFile.maxFileSize=104857600
log4j.appender.logModuleFile.Threshold=DEBUG
##表示所有消息都会被立即输出，设为false则不输出，默认值是true。
log4j.appender.logModuleFile.ImmediateFlush=true
log4j.appender.logModuleFile.Append=true
log4j.appender.logModuleFile.File=${app.root}/WEB-INF/logs/ysl_logModuleFile.log
log4j.appender.logModuleFile.encoding=utf-8
#log4j.appender.logFile.DatePattern='.'yyyyMMdd
log4j.appender.logModuleFile.layout=org.apache.log4j.PatternLayout
log4j.appender.logModuleFile.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n

##日志文件
log4j.appender.sessionModuleFile=org.apache.log4j.RollingFileAppender
log4j.appender.sessionModuleFile.maxFileSize=104857600
log4j.appender.sessionModuleFile.Threshold=DEBUG
log4j.appender.sessionModuleFile.ImmediateFlush=true
log4j.appender.sessionModuleFile.Append=true
log4j.appender.sessionModuleFile.File=${app.root}/WEB-INF/logs/ysl_sessionModuleFile.log
log4j.appender.sessionModuleFile.encoding=utf-8
log4j.appender.sessionModuleFile.layout=org.apache.log4j.PatternLayout
log4j.appender.sessionModuleFile.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n

##第三方日志配置

log4j.logger.org.apache.ibatis=INFO 
log4j.logger.net.sf.json=DEBUG

#    %c 输出日志信息所属的类的全名 
#    %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss}，输出类似：2002-10-18- 22：10：28
#    %f 输出日志信息所属的类的类名 
#    %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行 
#    %m 输出代码中指定的信息，如log(message)中的message 
#    %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n” 
#    %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推 
#    %r 输出自应用启动到输出该日志信息所耗费的毫秒数 
#    %t 输出产生该日志事件的线程名